name: Build
on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  build-linux:
    name: Build (Linux)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        name:
          - gcc -O0
          - gcc -Og -fsanitize=address
          - gcc -O2
          - gcc -O2 -flto
          - gcc -O3
          - gcc -O3 -flto
          - gcc -Os
          - clang -O2
          - clang -O2 -flto
          - clang -O3
          - clang -O3 -flto
          - clang -Os
        include:
          - name: gcc -O0
            short: gcc-o0
            cc: gcc
            cxx: g++
            meson-cfg: --optimization=0
            ldflags: ""
          - name: gcc -Og -fsanitize=address
            short: gcc-asan
            cc: gcc
            cxx: g++
            meson-cfg: --optimization=g -Db_sanitize=address
            ldflags: ""
          - name: gcc -O2
            short: gcc-o2
            cc: gcc
            cxx: g++
            meson-cfg: --optimization=2
            ldflags: ""
          - name: gcc -O2 -flto
            short: gcc-o2-lto
            cc: gcc
            cxx: g++
            meson-cfg: --optimization=2 -Db_lto=true
            ldflags: ""
            annotate: 1
          - name: gcc -O3
            short: gcc-o3
            cc: gcc
            cxx: g++
            meson-cfg: --optimization=3
            ldflags: ""
          - name: gcc -O3 -flto
            short: gcc-o3-lto
            cc: gcc
            cxx: g++
            meson-cfg: --optimization=3 -Db_lto=true
            ldflags: ""
          - name: gcc -Os
            short: gcc-os
            cc: gcc
            cxx: g++
            meson-cfg: --optimization=s
            ldflags: ""
          - name: clang -O2
            short: clang-o2
            cc: clang
            cxx: clang++
            meson-cfg: --optimization=2
            ldflags: -fuse-ld=lld
          - name: clang -O2 -flto
            short: clang-o2-lto
            cc: clang
            cxx: clang++
            meson-cfg: --optimization=2 -Db_lto=true
            ldflags: -fuse-ld=lld
          - name: clang -O3
            short: clang-o3
            cc: clang
            cxx: clang++
            meson-cfg: --optimization=3
            ldflags: -fuse-ld=lld
          - name: clang -O3 -flto
            short: clang-o3-lto
            cc: clang
            cxx: clang++
            meson-cfg: --optimization=3 -Db_lto=true
            ldflags: -fuse-ld=lld
          - name: clang -Os
            short: clang-os
            cc: clang
            cxx: clang++
            meson-cfg: --optimization=s
            ldflags: -fuse-ld=lld
    env:
      CC: ${{ matrix.cc }}
      CXX: ${{ matrix.cxx }}
      LDFLAGS: ${{ matrix.ldflags }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Meson and dependencies
        run: |
          sudo apt-get install \
            meson \
            ninja-build \
            check
          if [ x$CC = xclang ]; then
            sudo apt-get install clang lld
          fi
      - name: Configure project
        run: |
          meson setup \
            --backend=ninja \
            --debug \
            --prefix=/usr \
            ${{ matrix.meson-cfg }} \
            build
      - name: Build
        run: |
          if [ x${{ matrix.annotate }} = x1 ]; then
            echo "::add-matcher::.github/cc.json"
          fi
          ninja -v -C build all
          if [ x${{ matrix.annotate }} = x1 ]; then
            echo "::remove-matcher owner=cc::"
          fi
      - name: Test
        run: meson test -C build --verbose --no-rebuild
      - name: Upload test log
        uses: actions/upload-artifact@v4
        with:
          name: testlog-${{ github.sha }}-ubuntu-${{ matrix.short }}
          path: build/meson-logs/testlog.txt
      - name: Install
        run: |
          mkdir destdir && DESTDIR=${PWD}/destdir ninja -C build install
      - name: Upload installed tree
        uses: actions/upload-artifact@v4
        with:
          name: libtaco-${{ github.sha }}-ubuntu-${{ matrix.short }}
          path: destdir
  build-mingw:
    name: Build (Windows)
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        name:
          - gcc -O2
          - gcc -O2 -flto
          - gcc -O3
          - gcc -O3 -flto
          - gcc -Os
          - clang -O2
          - clang -O2 -flto
          - clang -O3
          - clang -O3 -flto
          - clang -Os
        include:
          - name: gcc -O2
            short: gcc-o2
            msystem: ucrt64
            meson-cfg: --optimization=2
            ldflags: ""
          - name: gcc -O2 -flto
            short: gcc-o2-lto
            msystem: ucrt64
            meson-cfg: --optimization=2 -Db_lto=true
            ldflags: ""
          - name: gcc -O3
            short: gcc-o3
            msystem: ucrt64
            meson-cfg: --optimization=3
            ldflags: ""
          - name: gcc -O3 -flto
            short: gcc-o3-lto
            msystem: ucrt64
            meson-cfg: --optimization=3 -Db_lto=true
            ldflags: ""
          - name: gcc -Os
            short: gcc-os
            msystem: ucrt64
            meson-cfg: --optimization=s
            ldflags: ""
          - name: clang -O2
            short: clang-o2
            msystem: clang64
            meson-cfg: --optimization=2
          - name: clang -O2 -flto
            short: clang-o2-lto
            msystem: clang64
            meson-cfg: --optimization=2 -Db_lto=true
          - name: clang -O3
            short: clang-o3
            msystem: clang64
            meson-cfg: --optimization=3
          - name: clang -O3 -flto
            short: clang-o3-lto
            msystem: clang64
            meson-cfg: --optimization=3 -Db_lto=true
          - name: clang -Os
            short: clang-os
            msystem: clang64
            meson-cfg: --optimization=s
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: msys2/setup-msys2@v2
        with:
          release: false
          msystem: ${{ matrix.msystem }}
          pacboy: >-
            toolchain:p
            meson:p
            ninja:p
            check:p
            cmake:p
            libiconv:p
            bison:
            flex:
      - name: Configure project
        run: |
          meson setup \
            --backend=ninja \
            --debug \
            --prefix=/usr \
            ${{ join(matrix.meson-cfg) }} \
            build
      - name: Build
        run: ninja -v -C build all
      - name: Test
        run: meson test -C build --verbose --no-rebuild
      - name: Upload test log
        uses: actions/upload-artifact@v4
        with:
          name: testlog-${{ github.sha }}-mingw-w64-${{ matrix.short }}
          path: build/meson-logs/testlog.txt
      - name: Install
        run: |
          mkdir destdir && DESTDIR=${PWD}/destdir ninja -C build install
      - name: Upload installed tree
        uses: actions/upload-artifact@v4
        with:
          name: libtaco-${{ github.sha }}-mingw-w64-${{ matrix.short }}
          path: destdir
