name: Build
on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  build-linux:
    name: Build (Linux)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        cc:
          - gcc
          - clang
        options:
          - [--optimization=0]
          - [--optimization=2]
          - [--optimization=2, -Db_lto=true]
          - [--optimization=3]
          - [--optimization=3, -Db_lto=true]
          - [--optimization=s]
        include:
          - cc: gcc
            options: [--optimization=0, -Db_sanitize=address]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Meson and dependencies
        run: |
          sudo apt-get install \
            meson \
            ninja-build \
            check
      - name: Configure project
        run: |
          CC=${{ matrix.cc }} meson setup \
            --backend=ninja \
            --debug \
            --prefix=/usr \
            --strip \
            ${{ join(matrix.options, ' ') }} \
            build
      - name: Build
        run: ninja -v -C build all
      - name: Test
        run: meson test -C build --verbose --no-rebuild
  build-mingw:
    name: Build (Windows)
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        options:
          - [--optimization=0]
          - [--optimization=2]
          - [--optimization=2, -Db_lto=true]
          - [--optimization=3]
          - [--optimization=3, -Db_lto=true]
          - [--optimization=s]
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: msys2/setup-msys2@v2
        with:
          release: false
          msystem: clang64
          pacboy: >-
            toolchain:p
            meson:p
            ninja:p
            check:p
            bison:
            flex:
      - name: Configure project
        run: |
          meson setup \
            --backend=ninja \
            --debug \
            --prefix=/usr \
            --strip \
            ${{ join(matrix.options, ' ') }} \
            build
      - name: Build
        run: ninja -v -C build all
      - name: Test
        run: meson test -C build --verbose --no-rebuild
